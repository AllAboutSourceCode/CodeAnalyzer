Backup date : June 8, 4:52 pm, 2019.

Details: At present this code is successfully identifying the EMOs in the file opened in the editor.
	    And at double click it is selecting the corresponding set of instructions.
	    
	    
Backup data : June 11, 7.34pm, 2019

Details: At present the processbuilder is used and we 	    



June 13, 8.57pm:

	In this backup, I am working on the file StatementExtractor, where each EMO is populated with
	corressponding source statements from the native source code method. The process is commented 
	in the method and is yet to be implemented.
	
June 14, 1135pm

	Dirty Files:
			ComputeEMO.java	: File is being modified to remove an EMO which begins at the method signature.
			StatementExtractor.java	:	a returns statement with condition if(true) return; is to be removed.	
			
June 17, 7.54pm

	Recent modified Files:
			ComputeEMO.java		: File is modified to remove EMOs which begin with method signature. Method removeEMOsWithMethodSignature() 
								  is introduced to the job. This method is the recent modified method.
			StatementExtractor.java	: File is modified to support new way to populate EMO with source code statements replicas.


June 18, 11.55pm
	Recent Modified Files:
			ComputeEMO.java		: File is modified to support boundary exceptions. A new value -1 is introduced for 'nextStatementLineNumber' to
									indicate that the list of method statement blocks is ended and yet the statement to be extracted not found.
								  Here, we encountered with a new case where, the block to be extracted was present inside the finally block.
								  So, unfolding the try block could not help, as we have not unfolded finally block. So, at present we have supported
								  unfolding of finally block but catch block is yet to be unfolded. To support unfolding of finally block the following
								  file is modified.
								  								  
			StatementExtractor.java	: File is modified to support unfolding of finally block. catch block unfolding is yet to be supported.
			
	Note:	This brings us a new dilemma for if-else block that is we need to check whether 'else' block is dependent of 'if' like 'catch' or 'finally' on try.

/*--------------------------------------------Functional Backup--------------------------------------------------------------*/	
June 25, 12.32am
	Recent Modification/updates:
			precomputation.py		:	This file now recieves the value for -relay parameter from command line/Eclipse plugin. 
									Note that earlier versions of it does not contain a few addtional methods added to it, to make it simple to 
									accept parmeters from command line.
									
	Functionality:
			This back up is tested for two buttons.
				1. Extract Method refactoring Identifications
				2. Toggling -relay parameter and corressponding output.
	Tobe Added	:
			Next, we target to add a input support for other two parameters for controling the segmentation approach. After that we will be 
			ready to deploy the plugin.
/*-----------------------------------------------------------*/						
